# import the necessary packages
import cv2
import numpy as np
import matplotlib.pyplot as plt
import sys

#define a function
def ontrackbar(max_slider):
    global Img
    global dst
    global gray
    
    dst =np.copy(Img)
    #get reading from trackbar1&2 for th1&th2
    th1=max_slider
    th2= cv2.getTrackbarPos("threshold2","Edges")
    # detect edges in gray image
    edges= cv2.Canny(gray,th1,th2)
    #Finds circles in a grayscale image using the Hough transform.
    circles = cv2.HoughCircles(edges, cv2.HOUGH_GRADIENT,1, 60,param1=100,param2=30,minRadius=0,maxRadius=50)
    circles = np.uint16(np.around(circles))
    circles_detected= np.any(circles)
    if circles_detected==True:
        # Draw the circles found on the Image
        for i in circles[0,:]:
            # draw the outer circle"
            cv2.circle(dst,(i[0],i[1]),i[2],(0,100,100),2)
            # draw the center of the circle
            cv2.circle(dst,(i[0],i[1]),2,(255,0,255),3)
            # display the 2 images
            cv2.imshow('detected circles',dst)
            cv2.imshow("Edges",edges)
    #if No circle is detected mention that no circle found
    else:
        print("no circle found")
if __name__=="__main__":
    # read the image from disk, filter noise from it and convert it to grayscale
    Img=cv2.imread("bicycle2.JFIF")
    img = cv2.medianBlur(Img,5)
    dst=np.copy(Img)
    gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
    # create 2 windows for the images 
    cv2.namedWindow("Edges")
    cv2.namedWindow("detected circles")
    # define the initial values and maximum length of the 2 trackbars
    inith=20
    maxth=500
    inith1=19
    maxth1=490
    #create 2 trackbars in the edge window
    cv2.createTrackbar("threshold","Edges",inith,maxth,ontrackbar)
    cv2.createTrackbar("threshold2","Edges",inith1,maxth1,ontrackbar)
    ontrackbar(inith)
        
cv2.waitKey(0)
cv2.destroyAllWindows()
